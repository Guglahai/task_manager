openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

  /tasks/{id}:
    parameters:
    - name: id
      in: path
      required: true
      schema: 
        type: string
      allowReserved: true

    patch:
      summary: Update a task
      tags:
        - tasks
      requestBody:
        description: The task to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: The updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'

    delete:
      summary: Delete a task
      tags:
        - tasks
      responses:
        '204':
          description: Successfully deleted

  /users/{id}/tasks:
    get:
      operationId: GetTasksByUserID
      tags:
        - tasks
      summary: Get tasks by user ID
      description: Returns a list of tasks for the specified user
      parameters:
        - name: id
          in: path
          description: ID of the user to get tasks for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /users:
    get:
      summary: Get all users
      tags:
        - users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Create a new user
      tags:
        - users
      requestBody:
        description: A user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      
  /users/{id}:
    parameters:
    - name: id
      in: path
      required: true
      schema: 
        type: string
      allowReserved: true

    patch:
      summary: Update a user
      tags:
        - users
      requestBody:
        description: A user to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      summary: Delete a user
      tags:
        - users
      responses:
        '204':
          description: Successfully deleted
              
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/google/uuid
        task:
          type: string
        is_done:
          type: boolean
        user_id:
          type: string

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/google/uuid
        email:
          type: string
        password:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time